// CoinPost.gs
function getYesterdayCoinPostArticles() {
  Logger.log('負承取得');
  const url = 'https://coinpost.jp/?feed=rss2';  // RSSエンタタのURL
  
  try {
    Logger.log('RSSパータにアクセス ' + url);
    const response = UrlFetchApp.fetch(url);
    const xml = response.getContentText();
    Logger.log('RSSヘリイ取得成功');
    
    const document = XmlService.parse(xml);
    const root = document.getRootElement();
    const channel = root.getChild('channel');
    const items = channel.getChildren('item');
    
    Logger.log('記錄敳: ' + items.length);
    
    const articles = [];
    
    items.forEach(item => {
      const title = item.getChild('title').getText();
      const link = item.getChild('link').getText();
      const content = item.getChild('description').getText()
        .replace(/<[^>]+>/g, '') // HTMLエレメントを削除
        .replace(/\\s+/g, ' ') // 🇵あの積の積にする
        .trim();
      
      Logger.log('負承取得: ' + title);
      
      articles.push({
        title: title,
        link: link,
        content: content
      });
    });
    
    Logger.log('取历完 - 記錄敳: ' + articles.length);
    return articles;
    
  } catch (error) {
    Logger.log('RSSヘリイ取得カウント: ' + error);
    return [];
  }
}